name: Build Asuswrt-Modx

on:
  workflow_dispatch:
    inputs:
      target:
        type: choice
        description: 'target to build'
        options:
        - Xiaomi_R3G
        - Xiaomi_R3P
        - Xiaomi_R4A
        - Redmi_AC2100
        - Xiaomi_AC2100
        - Lenovo_NEWIFI2
        - Xiaoyu_C1
        - Xiaoyu_C3
        - Xiaoyu_C5
        - Diting_NEWIFI3
        - JDCloud_1
        - Gee_HC5962
        - ZTE_E8820S
        - Nokia-Sbell_A-040W-Q
        - Raisecom_MSG1500_X.00
      uploadanon:
        type: boolean
        description: 'upload firmware to anonfiles'
        default: 'false'
env:
  REPOSITORY_URL: https://github.com/stkuroneko/asuswrt-mt7621at.git
  WORK_PATH: /opt/asuswrt-modx
  TIME_ZONE: Asia/Shanghai
  FIRMWARE_PATH: /opt/firmwares
jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - uses: actions/checkout@v4
    - uses: Bonnie2980/variable-mapper@master
      id: export
      with:
        key: "${{ github.event.inputs.target }}"
        map: |
          {
            "Xiaomi_R3G": {
              "model": "RT-MIR3G"
            },
            "Xiaomi_R3P": {
              "model": "RT-MIR3P"
            },
            "Xiaomi_R4A": {
              "model": "RT-MIR4A"
            },
            "Redmi_AC2100": {
              "model": "RT-RM2100"
            },
            "Xiaomi_AC2100": {
              "model": "RT-R2100"
            },
            "Lenovo_NEWIFI2": {
              "model": "RT-NEWIFI2"
            },
            "Xiaoyu_C1": {
              "model": "RT-XYC3"
            },
            "Xiaoyu_C3": {
              "model": "RT-XYC3"
            },
            "Xiaoyu_C5": {
              "model": "RT-XYC3"
            },
            "Diting_NEWIFI3": {
              "model": "RT-NEWIFI3"
            },
            "JDCloud_1": {
              "model": "RT-JDC1"
            },
            "Gee_HC5962": {
              "model": "RT-HIWIFI4"
            },
            "ZTE_E8820S": {
              "model": "RT-E8820S"
            },
            "Nokia-Sbell_A-040W-Q": {
              "model": "RT-A040WQ"
            },
            "Raisecom_MSG1500_X.00": {
              "model": "RT-MSG1500"
            },
            ".*": {
              "model": "RT-MSG1500"
            }
          }
        export_to: env
        mode: first_match
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo dpkg --add-architecture i386
        sudo dpkg -l | awk '/ii  lib.*deb.sury.org/ {gsub(/:.*/, s, $2); print $2}' | xargs apt show -a | awk '/Package:/ {p=$2} /APT-Sources: .*focal\/main/ {print p"/focal"}' | sudo xargs eatmydata apt install --allow-downgrades
        sudo apt update
        sudo apt-get -y --no-install-recommends install libncurses5 libncurses5-dev m4 bison gawk flex libstdc++-4.8-dev g++-multilib g++
        sudo apt-get -y --no-install-recommends install gengetopt git gitk zlib1g-dev autoconf autopoint libtool shtool autogen mtd-utils intltool sharutils
        sudo apt-get -y --no-install-recommends install docbook-xsl-* libstdc++5 texinfo dos2unix xsltproc binutils u-boot-tools device-tree-compiler python
        sudo apt-get -y --no-install-recommends install qemu gperf liblzo2-dev uuid-dev build-essential lzma-dev liblzma-dev lzma patch cmake intltool yodl yodl-doc
        sudo apt-get -y --no-install-recommends install libglib2.0-dev gtk-doc-tools libc6-i386 lib32stdc++6 lib32z1 libelf1:i386 lib32ncurses5 libc6-dev-i386 libstdc++6:i386
        sudo timedatectl set-timezone "$TIME_ZONE"
    - name: Clone source code
      run: |
        git clone --depth=1 $REPOSITORY_URL $WORK_PATH
    - name: Build
      run: |
        sudo cp -f bashScripts/asuswrt_build.sh $WORK_PATH/build.sh
        cd $WORK_PATH
        sudo chmod 777 ./build.sh
        bash ./build.sh ${{ env.model }}
        echo "dateprefix=$(date +"%Y%m%d")" >> $GITHUB_ENV
    - name: Organize firmware files
      run: |
        mkdir -p $FIRMWARE_PATH/
        cd $WORK_PATH/release/src-ra-5010/image
        for firmwarefile in $(ls *.trx)
        do sudo mv -f $firmwarefile $FIRMWARE_PATH/${{ env.model }}"_"${dateprefix}.trx
        done
        for md5file in $(ls *.md5)
        do sudo mv -f $md5file $FIRMWARE_PATH/${{ env.model }}"_"${dateprefix}.md5
        done
        cd $FIRMWARE_PATH
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "STATUS=success" >> $GITHUB_ENV
    - name : Upload packages
      uses: actions/upload-artifact@main
      if: env.STATUS == 'success'
      with:
        name: Asuswrt-packages
        path: ${{ env.FIRMWARE }}
    - name: Upload firmware to anonfiles
      if: env.STATUS == 'success' && github.event.inputs.uploadanon == 'true'
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer anon --no-progress ${FIRMWARE} 2>&1 | tee anonfile.log
        echo "::warning file=anonfile.com::$(cat anonfile.log | grep -o -E "https?://[a-zA-Z0-9\.\/_&=@$%?~#-]*")"
    - name: Remove obsolete firmwares on artifacts
      uses: Bonnie2980/gha-remove-artifacts@master
      if: env.STATUS == 'success'
      with:
        age: '1 day'
        skip-recent: 5
